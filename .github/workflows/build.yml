name: Build APK

on:
  push:
    tags:
      - 'v*'
      - '*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Check if signing variables exist
      id: check_sign
      run: |
        if [ -n "$KEYSTORE_BASE64" ]; then
          echo "HAS_SIGNING=true" >> $GITHUB_OUTPUT
        else
          echo "HAS_SIGNING=false" >> $GITHUB_OUTPUT
        fi

    - name: Create keystore from variables
      if: steps.check_sign.outputs.HAS_SIGNING == 'true'
      run: |
        printf '%s' "$KEYSTORE_BASE64" | base64 -d > app/keystore.jks

    - name: Build Release APK (with signing)
      if: steps.check_sign.outputs.HAS_SIGNING == 'true'
      run: ./gradlew assembleRelease
      env:
        ANDROID_KEYSTORE_PATH: keystore.jks
        ANDROID_KEYSTORE_PASSWORD: ${{ env.KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ env.KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ env.KEY_PASSWORD }}

    - name: Build Release APK (unsigned)
      if: steps.check_sign.outputs.HAS_SIGNING == 'false'
      run: ./gradlew assembleRelease

    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Upload Release APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: BA_Recorder-${{ steps.tag.outputs.TAG_NAME }}
        path: app/build/outputs/apk/release/*.apk

    - name: Publish GitHub Release and upload APK
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: BA Recorder ${{ steps.tag.outputs.TAG_NAME }}
        draft: false
        prerelease: false
        files: |
          app/build/outputs/apk/release/*.apk
      env:
        GITHUB_TOKEN: ${{ github.token }}
